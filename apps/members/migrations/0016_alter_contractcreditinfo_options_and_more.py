# Generated by Django 4.2.7 on 2023-11-24 08:35
import decimal

from django.db import migrations, models
import django.db.models.deletion


def populate_contract_credit_portion(apps, schema_editor):
    """Set appropriate portion to existing contracts.

    Here we create credit instance for contracts' creators if they don't exist
    yet. During the process, we calculate how many volunteers get credited for
    each contract, then set the appropriate value for `portion` of each credit.

    """

    ContractCreditInfo = apps.get_model("members.ContractCreditInfo")
    Contract = apps.get_model("members.Contract")
    contracts = Contract.objects.annotate(
        credit_count=models.Count("credits_info"),
    ).prefetch_related("credits_info")
    updated_credits_info = []
    new_credits_info = []
    for contract in contracts:
        if contract.credit_count == 0:
            new_credits_info.append(
                ContractCreditInfo(
                    user_campaign_id=contract.created_by_id,
                    contract_id=contract.id,
                    portion=1,
                ),
            )
            continue

        total_credit_count = 0
        credit_for_creator = ContractCreditInfo(
            user_campaign_id=contract.created_by_id,
            contract_id=contract.id,
        )
        for contract_credit in contract.credits_info.all():
            total_credit_count += 1
            if contract_credit.user_campaign_id == contract.created_by_id:
                credit_for_creator = None
        if credit_for_creator is not None:
            total_credit_count += 1
            credit_for_creator.portion = 1 / total_credit_count
            new_credits_info.append(credit_for_creator)

        shared_portion = 1 / total_credit_count
        for contract_credit in contract.credits_info.all():
            contract_credit.portion = shared_portion

        updated_credits_info.extend(contract.credits_info.all())

    ContractCreditInfo.objects.bulk_create(new_credits_info)
    ContractCreditInfo.objects.bulk_update(
        updated_credits_info,
        fields=["portion"],
    )


class Migration(migrations.Migration):

    dependencies = [
        ('campaigns', '0036_auto_20231116_1107'),
        ('members', '0015_rename_contractsharedcreditinfo_contractcreditinfo'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='contractcreditinfo',
            options={'verbose_name': 'Contract Credit Info', 'verbose_name_plural': 'Contract Credits Info'},
        ),
        migrations.AddField(
            model_name='contractcreditinfo',
            name='portion',
            field=models.DecimalField(decimal_places=3, default=1, max_digits=4, verbose_name='Portion'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='contract',
            name='shared_credits_with',
            field=models.ManyToManyField(blank=True, related_name='credited_contracts', through='members.ContractCreditInfo', to='campaigns.usercampaign', verbose_name='Shared credits with'),
        ),
        migrations.AlterField(
            model_name='contractcreditinfo',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credits_info', to='members.contract', verbose_name='Contract'),
        ),
        migrations.AlterField(
            model_name='contractcreditinfo',
            name='user_campaign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts_credit_info', to='campaigns.usercampaign', verbose_name='User campaign'),
        ),
        migrations.RunPython(
            populate_contract_credit_portion,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
